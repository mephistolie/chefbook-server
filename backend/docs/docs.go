// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "ChefBook API Support",
            "email": "support@chefbook.space"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/activate/{activation_code}": {
            "get": {
                "description": "Activate profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Activate Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activation Code",
                        "name": "activation_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "description": "Refresh session to get new tokens pair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Session",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-in": {
            "post": {
                "description": "Sign in to profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-out": {
            "post": {
                "description": "Sign out and remove session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign Out",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-up": {
            "post": {
                "description": "Create new profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Id"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response_body.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new user category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.CategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Id"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/categories/{category_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.CategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user profile info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get Profile Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.MinimalProfileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/profile/avatar": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload profile avatar",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Upload avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Avatar File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete profile avatar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete Avatar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/profile/key": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user encrypted vault key (AES encrypted by generated RSA)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile-encryption"
                ],
                "summary": "Get User Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload user encrypted vault key (RSA encrypted by vault password generated AES)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile-encryption"
                ],
                "summary": "Upload User Key",
                "parameters": [
                    {
                        "type": "file",
                        "description": "User Key File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user encrypted vault key (RSA encrypted by vault password generated AES)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile-encryption"
                ],
                "summary": "Delete User Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/profile/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change profile password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Password Changing",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.PasswordChanging"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/profile/username": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change profile username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Change Username",
                "parameters": [
                    {
                        "description": "Username",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recipes by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get Recipes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipes author ID",
                        "name": "author_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get only those recipes that were created by user",
                        "name": "owned",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get only those recipes that saved to user recipe book",
                        "name": "saved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search recipes with specified name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sorting. Acceptable values: 'creation_timestamp', 'update_timestamp', 'likes', 'time', 'servings', 'calories'",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipe language codes",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page of the result",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size of the result. Maximum is 50",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimal recipe cooking time",
                        "name": "min_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum recipe cooking time",
                        "name": "max_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimal recipe servings",
                        "name": "min_servings",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum recipe servings",
                        "name": "max_servings",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimal recipe calories",
                        "name": "min_calories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum recipe calories",
                        "name": "max_calories",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response_body.RecipeInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Create Recipe",
                "parameters": [
                    {
                        "description": "Recipe",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.RecipeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Id"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/random": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get random recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get Random Recipe",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipe language codes",
                        "name": "language",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Recipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Recipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Update Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recipe",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_body.RecipeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Delete Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/categories": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set user categories for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Set Recipe Categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recipe categories",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/favourite": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add recipe to favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Add Recipe to Favourites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete recipe from favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Delete Recipe from Favourites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/key": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recipe encrypted key (AES encrypted by user RSA Private Key)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-encryption"
                ],
                "summary": "Get Recipe Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload recipe encrypted key (AES encrypted by user RSA Private Key)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-encryption"
                ],
                "summary": "Upload Recipe Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Recipe Key File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete recipe encrypted key (AES encrypted by user RSA Private Key)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-encryption"
                ],
                "summary": "Delete Recipe Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/likes": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Like recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Like Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unlike recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Unlike recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/pictures": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recipe pictures links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-pictures"
                ],
                "summary": "Get Recipe Pictures",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload recipe picture as usual or encrypted file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-pictures"
                ],
                "summary": "Upload Recipe Picture",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Picture File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/pictures/{picture_name}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete recipe picture by name",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-pictures"
                ],
                "summary": "Delete Recipe Picture",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Picture Name",
                        "name": "picture_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add recipe to user recipe book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Add Recipe to Recipe Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove recipe from user recipe book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Remove Recipe from Recipe Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get users that saved recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Get Recipe Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response_body.MinimalProfileInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/users/key": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recipe key encrypted by user public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Get User Recipe Private Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common_body.RecipeOwnerPrivateKey"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set user public key for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Set Recipe User Public Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Key",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common_body.RecipeUserPublicKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user public key for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Delete Recipe User Public Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/users/{user_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user access to recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Delete User Access to Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/recipes/{recipe_id}/users/{user_id}/key": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user public key for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Get User Public Key for Recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common_body.RecipeUserPublicKey"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set owner private key encrypted by public user key for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Set Recipe Owner Private Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Key",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common_body.RecipeOwnerPrivateKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete owner private key encrypted by public user key for recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe-sharing"
                ],
                "summary": "Delete Recipe Owner Private Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        },
        "/v1/shopping-list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user shopping list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shopping-list"
                ],
                "summary": "Get Shopping List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.ShoppingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add purchases to user shopping list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shopping-list"
                ],
                "summary": "Add Purchases to Shopping List",
                "parameters": [
                    {
                        "description": "New Purchases",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common_body.Purchase"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set user shopping list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shopping-list"
                ],
                "summary": "Set Shopping List",
                "parameters": [
                    {
                        "description": "Shopping List",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common_body.Purchase"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response_body.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response_body.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common_body.CookingItem": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common_body.IngredientItem": {
            "type": "object",
            "required": [
                "text",
                "type"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "text": {
                    "type": "string",
                    "minLength": 1
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "common_body.Macronutrients": {
            "type": "object",
            "properties": {
                "carbohydrates": {
                    "type": "integer"
                },
                "fats": {
                    "type": "integer"
                },
                "protein": {
                    "type": "integer"
                }
            }
        },
        "common_body.Purchase": {
            "type": "object",
            "required": [
                "name",
                "purchase_id"
            ],
            "properties": {
                "is_purchased": {
                    "type": "boolean"
                },
                "multiplier": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "purchase_id": {
                    "type": "string"
                }
            }
        },
        "common_body.RecipeOwnerPrivateKey": {
            "type": "object",
            "required": [
                "encrypted_private_key"
            ],
            "properties": {
                "encrypted_private_key": {
                    "type": "string",
                    "minLength": 10
                }
            }
        },
        "common_body.RecipeUserPublicKey": {
            "type": "object",
            "required": [
                "encrypted_public_key"
            ],
            "properties": {
                "encrypted_public_key": {
                    "type": "string",
                    "minLength": 10
                }
            }
        },
        "request_body.CategoryInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "cover": {
                    "type": "string",
                    "maxLength": 20
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "request_body.Credentials": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "request_body.PasswordChanging": {
            "type": "object",
            "required": [
                "new_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "old_password": {
                    "type": "string",
                    "maxLength": 64
                }
            }
        },
        "request_body.RecipeInput": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "integer"
                },
                "cooking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common_body.CookingItem"
                    }
                },
                "description": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common_body.IngredientItem"
                    }
                },
                "language": {
                    "type": "string"
                },
                "macronutrients": {
                    "$ref": "#/definitions/common_body.Macronutrients"
                },
                "name": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "servings": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "request_body.RefreshToken": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "request_body.Username": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 40
                }
            }
        },
        "response_body.Category": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response_body.DetailedProfileInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "broccoins": {
                    "type": "integer"
                },
                "creation_timestamp": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "premium": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response_body.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response_body.Id": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response_body.Link": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "response_body.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response_body.MinimalProfileInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "broccoins": {
                    "type": "integer"
                },
                "creation_timestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "premium": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response_body.Recipe": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response_body.Category"
                    }
                },
                "cooking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common_body.CookingItem"
                    }
                },
                "creation_timestamp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "favourite": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common_body.IngredientItem"
                    }
                },
                "language": {
                    "type": "string"
                },
                "liked": {
                    "type": "boolean"
                },
                "likes": {
                    "type": "integer"
                },
                "macronutrients": {
                    "$ref": "#/definitions/common_body.Macronutrients"
                },
                "name": {
                    "type": "string"
                },
                "owned": {
                    "type": "boolean"
                },
                "owner_id": {
                    "type": "integer"
                },
                "owner_name": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "servings": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                },
                "update_timestamp": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "response_body.RecipeInfo": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response_body.Category"
                    }
                },
                "creation_timestamp": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "favourite": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "liked": {
                    "type": "boolean"
                },
                "likes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owned": {
                    "type": "boolean"
                },
                "owner_id": {
                    "type": "integer"
                },
                "owner_name": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "servings": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                },
                "update_timestamp": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "response_body.ShoppingList": {
            "type": "object",
            "properties": {
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common_body.Purchase"
                    }
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response_body.Tokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.chefbook.space",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ChefBook API",
	Description:      "ChefBook API Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
