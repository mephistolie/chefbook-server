version: '3.9'

services:
#  nginx:
#    image: nginx:1.21.3-alpine
#    restart: unless-stopped
#    ports:
#      - "${HTTP_PORT:-80}:80"
#      - "${HTTPS_PORT:-443}:443"
#    volumes:
#      - ./data/nginx:/etc/nginx/conf.d
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#  certbot:
#    image: certbot/certbot
#    restart: unless-stopped
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  postgres:
    container_name: chefbook-postgres
    image: postgres:14.0-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:?err}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?err}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./data/postgres/schema/initdb:/docker-entrypoint-initdb.d
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  backend:
    container_name: chefbook-backend
    build: backend
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=${APP_ENV:-debug}
      - GIN_MODE=${APP_ENV:-debug}
      - HTTP_HOST=${HTTP_HOST:-localhost}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY:?err}
      - SALT_COST=${SALT_COST:-10}
      - SMTP_EMAIL=${SMTP_EMAIL:?err}
      - SMTP_PASSWORD=${SMTP_PASSWORD:?err}
      - WAIT_HOSTS=postgres:5432
