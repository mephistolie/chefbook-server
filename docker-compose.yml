version: '3.9'

services:
  traefik:
    container_name: "chefbook-traefik"
    image: "traefik:v2.5.3"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=support@chefbook.space"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
        - "./data/letsencrypt:/letsencrypt"
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
  postgres:
    container_name: chefbook-postgres
    image: postgres:14.0-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:?err}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?err}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./data/postgres/schema/initdb:/docker-entrypoint-initdb.d
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  backend:
    container_name: chefbook-backend
    build: backend
    depends_on:
      - postgres
    ports:
      - "${BACKEND_PORT?-5000}:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry.rule=Host(`api.${HTTP_HOST}`)"
      - "traefik.http.routers.registry.entrypoints=websecure"
      - "traefik.http.routers.registry.tls.certresolver=myresolver"
    environment:
      - APP_ENV=${APP_ENV:-debug}
      - GIN_MODE=${APP_ENV:-debug}
      - HTTP_HOST=${HTTP_HOST:-localhost}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY:?err}
      - SALT_COST=${SALT_COST:-10}
      - SMTP_EMAIL=${SMTP_EMAIL:?err}
      - SMTP_PASSWORD=${SMTP_PASSWORD:?err}
      - WAIT_HOSTS=postgres:5432
networks:
  web:
    external: true